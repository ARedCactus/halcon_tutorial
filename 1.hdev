<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="21.11.0.0">
<procedure name="main">
<interface/>
<body>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="1">``</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="2">* Matching 01: ************************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="3">* Matching 01: BEGIN of generated code for model initialization</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="4">* Matching 01: ************************************************</c>
<l as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="5">set_system ('border_shape_models', 'false')</l>
<c></c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="7">* Matching 01: Initialize acquisition</c>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<c></c>
<l as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="8">*open_framegrabber ('DirectShow', 1, 1, 0, 0, 0, 0, 'default', 8, 'gray', -1, 'false', 'default', '[0] Integrated Camera', 0, -1, AcqHandle)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="9">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,1]" as_ord="1">* Matching 01: Obtain the model image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,1]" as_ord="2">grab_image (Image, AcqHandle)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="2">* Matching 01: Build the ROI from basic regions</c>
<l>gen_rectangle2 (ModelRegion, 558.514, 1039.33, rad(-118.802), 115.725, 60.4048)</l>
<c></c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="2">* Matching 01: Reduce the model template</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="3">reduce_domain (Image, ModelRegion, TemplateImage)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="2">* Matching 01: Create the shape model</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="3">create_shape_model (TemplateImage, 5, rad(0), rad(360), rad(0.8766), ['none','no_pregeneration'], 'use_polarity', [11,41,4], 4, ModelID)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="2">* Matching 01: Get the model contour for transforming it later into the image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="3">get_shape_model_contours (ModelContours, ModelID, 1)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="2">* Matching 01: Get the reference position</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="3">area_center (ModelRegion, ModelRegionArea, RefRow, RefColumn)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="4">vector_angle_to_rigid (0, 0, 0, RefRow, RefColumn, 0, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="5">affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="6">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="7">* Matching 01: Display the model contours</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="8">dev_display (Image)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="9">dev_set_color ('green')</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="10">dev_set_draw ('margin')</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="11">dev_display (ModelRegion)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="12">dev_display (TransContours)</l>
<l>dev_set_line_width(2)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="13">stop ()</l>
<c as_id="matching" as_name="Matching 01" as_grp="[2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[2]" as_ord="2">* Matching 01: END of generated code for model initialization</c>
<c as_id="matching" as_name="Matching 01" as_grp="[3,1]" as_ord="1">* Matching 01:  * * * * * * * * * * * * * * * * * * * * * * *</c>
<c as_id="matching" as_name="Matching 01" as_grp="[3,1]" as_ord="2">* Matching 01: BEGIN of generated code for model application</c>
<c as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="1">* </c>
<l as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="2">while (true)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="2">    * Matching 01: Obtain the image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="3">    grab_image (Image, AcqHandle)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="2">    * Matching 01: Find the model</c>
<l as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="3">    find_shape_model (Image, ModelID, rad(0), rad(360), 0.6, 0, 0.5, 'least_squares', [5,1], 0.75, Row, Column, Angle, Score)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[7,1]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[7,1]" as_ord="2">    * Matching 01: Transform the model contours into the detected positions</c>
<l as_id="matching" as_name="Matching 01" as_grp="[7,1]" as_ord="3">    dev_display (Image)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,2]" as_ord="1">    for I := 0 to |Score| - 1 by 1</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,3]" as_ord="1">        hom_mat2d_identity (HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,5]" as_ord="1">        hom_mat2d_rotate (HomMat2D, Angle[I], 0, 0, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,5]" as_ord="2">        hom_mat2d_translate (HomMat2D, Row[I], Column[I], HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,5]" as_ord="3">        affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,6]" as_ord="1">        dev_set_color ('green')</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,6]" as_ord="2">        dev_display (TransContours)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[7,7]" as_ord="1">    endfor</l>
<c as_id="matching" as_name="Matching 01" as_grp="[8,1]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[8,1]" as_ord="2">    * Matching 01: Code for alignment of e.g. measurements</c>
<c as_id="matching" as_name="Matching 01" as_grp="[8,1]" as_ord="3">    * Matching 01: Calculate a hom_mat2d for each of the matching results</c>
<l as_id="matching" as_name="Matching 01" as_grp="[8,2]" as_ord="1">    for I := 0 to |Score| - 1 by 1</l>
<l as_id="matching" as_name="Matching 01" as_grp="[8,3]" as_ord="1">        hom_mat2d_identity (AlignmentHomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[8,4]" as_ord="1">        hom_mat2d_translate (AlignmentHomMat2D, -RefRow, -RefColumn, AlignmentHomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[8,4]" as_ord="2">        hom_mat2d_rotate (AlignmentHomMat2D, Angle[I], 0, 0, AlignmentHomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[8,4]" as_ord="3">        hom_mat2d_translate (AlignmentHomMat2D, Row[I], Column[I], AlignmentHomMat2D)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[8,5]" as_ord="1">        * Matching 01: Insert your code using the alignment here, e.g. code generated by</c>
<c as_id="matching" as_name="Matching 01" as_grp="[8,5]" as_ord="2">        * Matching 01: the measure assistant with the code generation option</c>
<c as_id="matching" as_name="Matching 01" as_grp="[8,5]" as_ord="3">        * Matching 01: 'Alignment Method' set to 'Affine Transformation'.</c>
<l as_id="matching" as_name="Matching 01" as_grp="[8,6]" as_ord="1">    endfor</l>
<l as_id="matching" as_name="Matching 01" as_grp="[10]" as_ord="1">endwhile</l>
<c></c>
<c as_id="matching" as_name="Matching 01" as_grp="[11]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="1">* Matching 01: *******************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="2">* Matching 01: END of generated code for model application</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="3">* Matching 01: *******************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="4">* </c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
